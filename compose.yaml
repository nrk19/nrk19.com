version: "3"  

volumes:
  uptime-kuma_data:
  prometheus_data:
  grafana_data:
  certs:
    external: true

services:
  # cron-dyndns container (it will be running cron to update the server ip using the ionos api)
  dyndns:
    build: ./dyndns
    container_name: dyndns
    depends_on:
      - web
    volumes:
      - ./dyndns/cron.log:/var/log/cron.log

  # web container
  web:
    image: httpd:latest
    container_name: web
    env_file:
      - .env
    volumes:
      - ./web/htdocs:/usr/local/apache2/htdocs
      - ./web/httpd.conf:/usr/local/apache2/conf/httpd.conf
      - certs:/etc/letsencrypt
    ports:
      - 8080:80
      - 4443:443

  # grafana + prometheus configuration 
  # apache exporter container - to obtain the data from server mod_status and use them with prometheus
  apache-exporter:
    image: lusotycoon/apache-exporter
    container_name: apache-exporter
    depends_on:
      - web
    privileged: true
    expose:
      - 9117
    restart: unless-stopped
    extra_hosts:
    - "localhost:127.17.0.1"
    entrypoint: /bin/apache_exporter --scrape_uri="https://sysadmin:risa@nrk19.com/status?auto/"

  # prometheus container
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    depends_on:
      - apache-exporter
    restart: unless-stopped
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    expose:
      - 9090

  # grafana container
  grafana:
    image: grafana/grafana
    container_name: grafana
    depends_on:
      - prometheus
    expose:
      - 3000
    volumes:
      - grafana_data:/var/lib/grafana
